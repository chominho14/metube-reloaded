
웹사이트에 소셜 로그인 구현하기.

OAuth

다른 sns로그인이랑 흐름은 비슷하다.


1. 사용자를 깃헙으로 보낸다.
사용자들은 깃헙 신원을 요청하기 위해 redirect됩니다.

2. 우리에게 정보를 공유하는 것을 승인한다. 그러면 깃헙은 사용자를
	우리 웹사이트로 돌려보낸다.


3. 깃헙은 사용자를 token과 함께 redirect한다.

token으로 사용자를 받아온다.'


우선 github application이 있어야 한다.

깃허브 OAuth Apps
https://github.com/settings/developers

깃허브 OAuth Apps 공식문서
https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps


시간절약
https://github.com/login/oauth/authorize
https://github.com/login/oauth/authorize?client_id=입력값
https://github.com/login/oauth/authorize?client_id=입력값&allow_signup=false


login.pug에서 설정해 준다.

a(href="https://github.com/login/oauth/authorize") Continue with Github &rarr;

URL에 client ID를 보내줘야 한다.


ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ


https://docs.github.com/en/developers/apps/building-oauth-apps/scopes-for-oauth-apps

scope : 유저에게서 얼마나 많이 정보를 읽어내고 어떤 정보를 가져올 것인가에 대한 것.


우리는 read : user
	user : email 을 사용할 것이다.


a(href="https://github.com/login/oauth/authorize?client_id=f52f11bdcd54ee6c4d14&allow_signup=false&scope=user:email") Continue with Github &rarr;


하지만 이 url은 너무 길고 매번 쓸때마다 복사 붙여넣기를 해야 한다.
그래서 한군데애 모아두자.

유저 라우터에
userRouter.get("/github/start", startGithubLogin);
추가

유저 컨트롤러에 startHithubLogin 추가


 
export const startGithubLogin = (req, res) => {
  const baseUrl = "https://github.com/login/oauth/authorize";
  const config = {
    clientId: "9baa357fd395998ea01e",
    allow_signup: false,
    scope: "read:user user:email",
  };
  const params = new URLSearchParams(config).toString();
  const finalUrl = `${baseUrl}?${params}`;
  return res.redirect(finalUrl);
};

우린 
UrlSearchParams라 하는 utility를 사용할 것이다.


이제 우리는 Authorize를 클릭할 수 있게 해야한다.



















