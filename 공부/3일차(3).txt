middleware - morgan

morgan 은 node.js용 request logger meddleware다.

npm i morgan으로 설치

morgan 함수를 호출하면, 설정한 대로 middleware를 return 해준다.

import morgan from "morgan";

const logger = morgan("dev");

app.use(logger);식으로 사용

morgan에는 사용할 수 있는 것이 몇 개 있는데
그중 하나가 common ,short, dev, tiny, combined
combined는 시간, method, http버젼, 사용중인 브라우져, os 등

morgan이 middleware를 return해 준다.

----------------------------------------

라우터!!!

컨트롤러와 url의 관리를 쉽게 해준다.
= 미니 어플리케이션 개발하기.

라이터를 도메인 별로 나눈다.
= 유ㅓ저의 url을 가져와서 라우터 안에 넣는다
	동영상의 url을 가져와서 라우터 안에 넣는다.

라우터 url
작업중인 주제를 기반으로 url을 그룹화 해준다.
==> 라우터는 /users를 만들고 URL을 추가해 나가도록 해준다.

글로벌 라우터.home,join,login,search.
=>home에서 바로 갈 수 있는 사이트

-------------------------------------

라우터를 만드는 방법

global router , users router, videos rounter

const globalRouter = express.Router();
const userRouter = express.Router();
const videoRouter = express.Router();
를 추가한다.

그 뒤 루트url을 추가한다.
/, /users, /videos

app.use("/",globalRouter);
app.use("/videos", videoRouter);
app.use("/users", userRouter);

----> 앱이 준비된 상태.

라우터들에 함수를 넣어줘야 한다.


const globalRouter = express.Router();

const handleHome = (req, res) => res.send("Home");

globalRouter.get("/", handleHome);

식으로 만들어 준다.

-------------------------------------

일어나는 일..
use사용한 곳에서 라우터가 express한테 
누군가가 /videos로 시작하는 url에 접근하면 videoRouter에 있는
컨트롤러를 찾게 하는 것이다.
videoRouter에는 /whatch라는 url이 있다.
==> 누군가가 /videos로 접근하면 videoRouter 안에 들어간다.
	그러면 videoRouter은 /watch로 안내한다.
	그 다음 Express가 get에 있는 함수를 호출한다.


---------------------------------------------


코드 정리..!

globalRouter.js
usersRouter.js
videosRouter.js
로 나누어 파일은 만들어 준 뒤

import express from "express";

const globalRouter = express.Router();

const handleHome = (req, res) => res.send("Home");

globalRouter.get("/", handleHome);
식으로 모든 파일에 넣어 준다.(server.js에서 잘라내서!)

import시켜줘야 한다.
--> 모든 파일이 모듈이고 거품이다.
글러벌 라우터를 server.js로 데려온다.
import를 통해!
그 전에 export해줘야 한다.

globalRouter.js에 export default globalRouter;를 넣어준다.
후에 
server.js에서 
import globalRouter from "./routers/globalRouter";
를 추가해 준다.

---------------------------------------

코드를 깔끔하게 하기 위해선 라우터와 컨트롤러를 따로 둬야 된다.

컨트롤러 안에는 많은 메소드와 함수들이 들어가므로.

controllers폴더를 만ㄷ르어 주고 거기에

userController.js
videoController.js파일을 만들어 준다.


export const trending = (req, res) => res.send("Home Page Vidies");

export const watch = (req, res ) => res.send("watch");
export const edit = (req, res) => res.send("edit");
식으로 작성해 주어
어디서든 export된 것을 받을 수 있게 해 준다.

userRouter에 
import { edit, remove } from "../controllers/userController";
식으로 넣어주어 export한 것들을 연결 시켜준다.

깔끔하게 변환된 코드는.
import express from "express";
import { edit, remove } from "../controllers/userController";

const userRouter = express.Router();


userRouter.get("/edit", edit);
userRouter.get("/delete", remove);

export default userRouter;
식으로 변한다.

------------------------------------------

복습.
라우터는 url이 어떻게 시작하는지에 따라 나누는 방법.
==> 공통시작부분을 기반으로 url을 정리해 주는 것.








































