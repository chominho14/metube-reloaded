



video에는 파일이 필요하다.
views 폴더의 upload.pug에서 작업해준다.
form(method="POST", enctype="multipart/form-data")
        label(for="video") Video File
        input(type="file", accept="video/*", required, id="video", name="video")

추가

이제 비디오라우터 코드를 수정한다.
임포트와
 .post(uploadFiles.single("video"), postUpload);
작업

파일 업로드의 크기를 제한해준다.
이미지파일은 1MB , 동영상은 10MB로

미들웨어에서 비디오와 파일의 업로드를 다르게 작업해준다.
export const avatarUpload = multer({
  dest: "uploads/avatars/",
  limits: {
    fileSize: 3000000,
  },
});
export const videoUpload = multer({
  dest: "uploads/videos/",
  limits: {
    fileSize: 10000000,
  },
});

너무 큰 파일을 넣었을 때 오류메시지를 보내주어야 한다.
(나중에)

이제 비디오 컨트롤러에서도 req.file을 이용하여 코딩한다.
 const file = req.file;

fileUrl: file.path,

우리는 아직 db에 fileUrl을 만들어 주지 않았다 따라서 db모델링 부분에서 
추가해 준다.

이제 비디오가 보일 수 있게 작업만 해주면 된다.
watch.pug로 가서 video element를 추가하자.

video(src="/"+ video.fileUrl, controls)
로 할 수 있다.
controls는 동영상을 컨트롤 할 수 있게 만들어 준다.












































