

유저컨트롤러에서 유저가 로그인하면 유저에 대한 정보를 세션에 담을 것이다.

  req.session.loggedIn = true;
  req.session.user = user;

이것을 추가해 주어 세션에 정보를 추가한다.

각 브라우저마다 세션이 다 다르다.

  const ok = await bcryptjs.compare(password, user.password);
  if (!ok) {
    return res.status(400).render("login", {
      pageTitle,
      errorMessage: "Wrong password",
    });
  }
  req.session.loggedIn = true;
  req.session.user = user;
  return res.redirect("/");
};

로 수정

이제 로그인 되어있다면 로그아웃만 보이게끔 바꿔줄 것이다.

우리는 req.session object에 정보를 저장하고 있다.
유저가 로그인에 성공했는지 안햇는지 모르고.

pug탬플릿에서 유저가 로그인 되어있는지 연결해 줘야 한다.


ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

session의 middleware에서 
reqest안에 있는 것들을 확인해 보면 locals이 있다.

pug 템플릿에서 locals에 접근할 수 있다.

res.locals.sexy = "you";

로 변수 설정 가능. --> 전역변수라 모든 템플릿에서 사용가능하다.

이것을 이용하여 locals에 로그인한 사용자를 추가할 것이다.

이것을 한 번에 볼 수 있도록 따로 js폴더로 만들어 주자.

middlewares.js

localsMiddleware의 위치는 sessionMiddleware 다음에 해야한다.

아니면 읽어오지 못한다.


아직까지는 코드를 저장할때마다 session은 사라진다.



























